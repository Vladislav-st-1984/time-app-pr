version: '3' #указывает на то, что используется 3 версия файла compose

services: #раздел куда вписываем все службы, необходимые для запуска файла compose
  api: #настройка api
    restart: always #всегда перезапускает контейнер в случае ошибки
    build: ./api #путь для сборки образа api
    ports: #указывает порты подключения
      - 5555:5000 #сопоставление номера порта службы внутри контейнера Docker с номером порта на хост-компьютере
    depends_on: #порядок запуска служб
      - mysql #означает, что первым будет запущен mysql
  frontend: #настройка frontend
    restart: always #всегда перезапускает контейнер в случае ошибки
    build: ./frontend #путь для сборки образа frontend
    ports: #указывает порты подключения
      - 8954:8954 #сопоставление номера порта службы внутри контейнера Docker с номером порта на хост-компьютере
  mysql: #раздел настройки mysql
    restart: always #всегда перезапускает контейнер в случае ошибки
    image: mysql #выбираем готовый образ mysql
    environment: #переменные контейнера
      - MYSQL_ROOT_PASSWORD=password #установка пароля для входа
      - MYSQL_DATABASE=time_db #название бд
    volumes: #хранилище для контейнеров, сделанные в контейнерах записи остаются доступными 
    #после уничтожения содержавшего их контейнера и могут повторно использоваться в других
      - mysql_data:/var/lib/mysql #том и путь внутри контейнера
  adminer: #натройка adminer
    restart: always #всегда перезапускает контейнер в случае ошибки
    image: adminer #выбираем готовый образ adminer
    ports: #указывает порты подключения
      - 8888:8080 #сопоставление номера порта службы внутри контейнера Docker с номером порта на хост-компьютере
    depends_on: #порядок запуска служб
      - mysql #означает, что первым будет запущен mysql
volumes: #том хранения данных mysql
  mysql_data: #расположение тома 